#!/bin/bash
#
# rc.local
#
# This script is executed at the end of each multiuser runlevel.
# Make sure that the script will "exit 0" on success or any other
# value on error.
#
# In order to enable or disable this script just change the execution
# bits.
#
# By default this script does nothing.

PATH=/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin

# rescue status updater
[ -x /root/.oldroot/nfs/check/update_status.sh ] && /root/.oldroot/nfs/check/update_status.sh

# disable console blanking
for term in /dev/tty[0-9]*; do # select all ttyNN, but skip ttyS*
  setterm -term linux -blank 0 >$term <$term
  setterm -term linux -powersave off >$term <$term
done

# create gateway route for own subnet, so that servers
# in own subnet are reachable (VLANs on Switches)
GW=$(route -n | grep ^0.0.0.0 | awk '{print $2}')
DEVICE=$(route -n | grep ^0.0.0.0 | awk '{print $8}')
NET=$(route -n | egrep ^[^0].*$DEVICE$ | awk '{print $1}')
MASK=$(route -n | egrep ^[^0].*$DEVICE$ | awk '{print $3}')

#install new route
route add -net $NET netmask $MASK gw $GW

#force it87 for some boards
if [ -a /sys/devices/virtual/dmi/id/board_name ]; then
  if grep -qE "^B360HD3P" /sys/devices/virtual/dmi/id/board_name; then
    modprobe it87 force_id=0x8686 ignore_resource_conflict=1
  fi
fi

#get cmdline options
for i in $(cat /proc/cmdline) ; do case "$i" in CONFIG_URL=*|BOOTIF=*) export $i;; esac ; done

#display rescue bootup time before login and at ssh login
echo -e "Rescue System up since $(date +"%Y-%m-%d %H:%M %:z")\n"|tee -a /etc/issue | tee -a /etc/motd > /dev/null

#display bootif networkdata before login
echo -e "Network data:" >> /etc/issue
/usr/local/bin/netdata | grep -A2 -B1 $(echo $BOOTIF | sed -e 's/-/:/g' -e 's/^01://') >> /etc/issue
echo >> /etc/issue

#enable timestamps
echo 'Y' > /sys/module/printk/parameters/time
exit 0
